openapi: 3.0.0
info:
  title: Broker API
  description: 'Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API'
  version: 1.0.0
  contact:
    name: Alpaca Support
    email: support@alpaca.markets
    url: 'https://alpaca.markets/support'
  termsOfService: 'https://s3.amazonaws.com/files.alpaca.markets/disclosures/library/TermsAndConditions.pdf'
servers:
  - url: 'https://broker-api.sandbox.alpaca.markets'
    description: Sandbox endpoint
  - url: 'https://broker-api.alpaca.markets'
    description: Production endpoint
tags:
  - name: Accounts
  - name: Documents
  - name: Trading
  - name: Assets
  - name: Calendar
  - name: Events
  - name: Funding
  - name: OAuth
  - name: Clock
  - name: Journals
  - name: Watchlist
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  parameters:
    ActivityType:
      in: path
      name: activity_type
      required: true
      schema:
        type: string
        enum:
          - FILL
          - ACATC
          - ACATS
          - CSD
          - CSR
          - CSW
          - DIV
          - DIVCGL
          - DIVCGS
          - DIVNRA
          - DIVROC
          - DIVTXEX
          - INT
          - JNLC
          - JNLS
          - MA
          - NC
          - PTC
          - REORG
          - SSO
          - SSP
      description: see ActivityType model for details
    Status:
      name: status
      in: query
      description: Status of the orders to list.
      schema:
        type: string
        enum:
          - open
          - closed
          - all
    Limit:
      name: limit
      in: query
      description: The maximum number of orders in response.
      schema:
        type: integer
        example: 500
    After:
      name: after
      in: query
      description: The response will include only ones submitted after this timestamp (exclusive.)
      schema:
        type: string
        format: date-time
        example: '2021-03-16T18:38:01.942282Z'
    Until:
      name: until
      in: query
      description: The response will include only ones submitted until this timestamp (exclusive.)
      schema:
        type: string
        format: date-time
        example: '2021-03-16T18:38:01.942282Z'
    Direction:
      name: direction
      in: query
      description: The chronological order of response based on the submission time. asc or desc. Defaults to desc.
      schema:
        type: string
        enum:
          - asc
          - desc
        example: desc
    Sort:
      name: sort
      in: query
      description: The chronological order of response based on the submission time. asc or desc. Defaults to desc.
      schema:
        type: string
        enum:
          - asc
          - desc
        example: desc
    Nested:
      name: nested
      in: query
      description: 'If true, the result will roll up multi-leg orders under the legs field of primary order.'
      schema:
        type: boolean
        example: false
    Symbols:
      name: symbols
      in: query
      description: A comma-separated list of symbols to filter by.
      schema:
        type: string
        example: 'AAPL,TSLA,MSFT'
    AccountID:
      name: account_id
      in: path
      required: true
      description: Account identifier.
      schema:
        type: string
        format: uuid
    OrderID:
      name: order_id
      in: path
      required: true
      description: Order identifier.
      schema:
        type: string
    DocumentID:
      name: document_id
      in: path
      required: true
      description: Document identifier.
      schema:
        type: string
        format: uuid
    DocumentType:
      name: type
      in: query
      required: false
      description: See DocumentType model for reference and explanation of values
      schema:
        example: identity_verification
        type: string
        enum:
          - identity_verification
          - address_verification
          - date_of_birth_verification
          - tax_id_verification
          - account_approval_letter
          - cip_result
    PageToken:
      name: page_token
      in: query
      required: false
      schema:
        type: string
      description: 'TODO: find a good way to generalize the description of page_tokens'
  schemas:
    Account:
      type: object
      example:
        id: 0d18ae51-3c94-4511-b209-101e1666416b
        account_number: '9034005019'
        status: APPROVED
        currency: USD
        created_at: '2019-09-30T23:55:31.185998Z'
        last_equity: '1500.65'
      title: ''
      description: Represents high level account info. Used when returning entire account information would not be useful like the getAllAccounts operation
      properties:
        id:
          type: string
          format: uuid
        account_number:
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        crypto_status:
          $ref: '#/components/schemas/AccountCryptoStatus'
        currency:
          type: string
          description: Always "USD"
          example: USD
        created_at:
          type: string
          format: date-time
        last_equity:
          type: string
          format: decimal
        kyc_results:
          $ref: '#/components/schemas/KYCResult'
        account_type:
          $ref: '#/components/schemas/AccountType'
    AccountStatus:
      type: string
      example: ACTIVE
      enum:
        - SUBMITTED
        - ACTION_REQUIRED
        - EDITED
        - APPROVAL_PENDING
        - APPROVED
        - REJECTED
        - ACTIVE
        - DISABLED
        - ACCOUNT_CLOSED
      description: |
        Designates the current status of this account

        Possible Values:

        - **SUBMITTED**
        The application has been submitted and in process.
        - **ACTION_REQUIRED**
        The application requires manual action.
         - **EDITED**
        Application was edited (e.g. to match info from uploaded docs). This is a transient status.
        - **APPROVAL_PENDING**
        Initial value. The application approval process is in process.
        - **APPROVED**
        The account application has been approved, and waiting to be ACTIVE
        - **REJECTED**
        The account application is rejected for some reason
        - **ACTIVE**
        The account is fully active. Trading and funding are processed under this status.
        - **DISABLED**
        The account is disabled after ACTIVE status.
        - **ACCOUNT_CLOSED**
        The account is closed.
    AccountCryptoStatus:
      title: AccountCryptoStatus
      type: string
      example: PAPER_ONLY
      description: |-
        Designates if this account is allowed to trade crypto currencies or not.

        #TODO: Determine all possible values for this
        #ALSO MIGHT JUST BE AccountStatus type looking at the code, but AccountStatus type is missing *many* possible values

        - **PAPER_ONLY**
          account is only allowed to trade crypto in a paper api account
    AccountType:
      type: string
      title: AccountType
      description: |-
        Possible values are:

        - trading
        - custodial
        - donor_advised
        - traditional
        - traditional_rollover
        - roth_rollover
        - roth
        - trust
      enum:
        - trading
        - custodial
        - donor_advised
        - traditional
        - traditional_rollover
        - roth_rollover
        - roth
        - trust
      example: trading
    AccountExtended:
      type: object
      description: 'Represents an account with all data available. If your api response is missing some of these fields, there is a good chance you are using a route that returns `Account` instances instead of these.'
      x-examples:
        example-1:
          id: 3dcb795c-3ccc-402a-abb9-07e26a1b1326
          account_number: '601842165'
          status: ACTIVE
          crypto_status: PAPER_ONLY
          currency: USD
          last_equity: '40645.13'
          created_at: '2022-01-21T21:25:26.583576Z'
          contact:
            email_address: strange_elbakyan_97324509@example.com
            phone_number: 614-555-0697
            street_address:
              - 20 N San Mateo Dr
            city: San Mateo
            state: CA
            postal_code: '94401'
          identity:
            given_name: Strange
            family_name: Elbakyan
            date_of_birth: '1970-01-01'
            tax_id_type: USA_SNN
            country_of_citizenship: USA
            country_of_birth: USA
            country_of_tax_residence: USA
            funding_source:
              - employment_income
            visa_type: null
            visa_expiration_date: null
            date_of_departure_from_usa: null
            permanent_resident: null
          disclosures:
            is_control_person: false
            is_affiliated_exchange_or_finra: false
            is_politically_exposed: false
            immediate_family_exposed: false
            is_discretionary: false
          agreements:
            - agreement: margin_agreement
              signed_at: '2022-01-21T21:25:26.579487214Z'
              ip_address: 127.0.0.1
              revision: null
            - agreement: customer_agreement
              signed_at: '2022-01-21T21:25:26.579487214Z'
              ip_address: 127.0.0.1
              revision: null
            - agreement: account_agreement
              signed_at: '2022-01-21T21:25:26.579487214Z'
              ip_address: 127.0.0.1
              revision: null
          documents:
            - document_type: identity_verification
              document_sub_type: passport
              id: d5af1585-6c60-494d-9ea5-c5df62704229
              content: 'https://s3.amazonaws.com/stg.alpaca.markets/documents/accounts/3dcb795c-3ccc-402a-abb9-07e26a1b1326/2490f5d9-8988-4405-a3e0-d76e65de13c2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJLDF4SCWSL6HUQKA%2F20220210%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220210T162205Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=bc6cc0f541d569623f3973fb83734d7960a69886e8b175a9d472f666b87419f1'
              created_at: '2022-01-21T21:25:28.184231Z'
          trusted_contact:
            given_name: Jane
            family_name: Doe
            email_address: strange_elbakyan_97324509@example.com
          account_type: trading
          trading_configurations: null
      properties:
        id:
          type: string
          format: uuid
        account_number:
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        crypto_status:
          $ref: '#/components/schemas/AccountCryptoStatus'
        kyc_result:
          $ref: '#/components/schemas/KYCResult'
        currency:
          type: string
          description: Always "USD"
          example: USD
        last_equity:
          type: string
          format: decimal
        created_at:
          type: string
          format: date-time
        contact:
          $ref: '#/components/schemas/Contact'
        identity:
          $ref: '#/components/schemas/Identity'
        disclosures:
          $ref: '#/components/schemas/Disclosures'
        agreements:
          $ref: '#/components/schemas/Agreements'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDocument'
        trusted_contact:
          $ref: '#/components/schemas/TrustedContact'
        account_name:
          type: string
        account_type:
          $ref: '#/components/schemas/AccountType'
        custodial_account_type:
          type: string
          enum:
            - UTMA
            - UGMA
          description: '"UGMA" or "UTMA" only used when account_type is "custodial"'
        minor_identity:
          $ref: '#/components/schemas/CustodialAccountMinorIdentity'
        trading_configurations:
          $ref: '#/components/schemas/AccountConfigurations'
      required:
        - id
        - account_number
        - status
        - currency
        - last_equity
        - created_at
        - account_type
    AccountUpdateRequest:
      type: object
      x-examples:
        example-1:
          contact:
            email_address: john.doe@example.com
            phone_number: '+15556667788'
            street_address:
              - 20 N San Mateo Dr
            city: San Mateo
            state: CA
            postal_code: '94401'
          identity:
            given_name: John
            family_name: Doe
            date_of_birth: '1990-01-01'
            tax_id: 666-55-4321
            tax_id_type: USA_SSN
            country_of_citizenship: AUS
            country_of_birth: AUS
            country_of_tax_residence: USA
            funding_source:
              - employment_income
          disclosures:
            is_control_person: false
            is_affiliated_exchange_or_finra: false
            is_politically_exposed: false
            immediate_family_exposed: false
          trustedContact:
            given_name: Jane
            family_name: Doe
            email_address: jane.doe@example.com
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        identity:
          $ref: '#/components/schemas/Identity'
        disclosures:
          $ref: '#/components/schemas/Disclosures'
        trustedContact:
          $ref: '#/components/schemas/TrustedContact'
    AccountDocument:
      type: object
      description: |
        If an account has documents on the application submission,
        it has the ApplicationDocument model in exchange with
        DocumentUploadRequest.
      properties:
        id:
          type: string
          format: uuid
        document_type:
          $ref: '#/components/schemas/DocumentType'
        document_sub_type:
          type: string
        mime_type:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - document_type
        - created_at
      example:
        id: 0d18ae51-3c94-4511-b209-101e1666416b
        document_type: identity_verification
        document_sub_type: passport
        mime_type: image/jpeg
        created_at: '2019-09-30T23:55:31.185998Z'
    CustodialAccountMinorIdentity:
      description: Represents Identity information for a minor that an account of type "custodial" is for
      type: object
      x-examples: {}
      properties:
        given_name:
          type: string
        family_name:
          type: string
        date_of_birth:
          type: string
          format: date
        tax_id:
          type: string
        tax_id_type:
          $ref: '#/components/schemas/TaxIdType'
        country_of_citizenship:
          type: string
        country_of_birth:
          type: string
        country_of_tax_residence:
          type: string
        state:
          type: string
        email:
          type: string
          format: email
      required:
        - given_name
        - family_name
        - date_of_birth
        - country_of_tax_residence
        - state
        - email
    AccountConfigurations:
      title: AccountConfigurations
      type: object
      description: Represents additional configuration settings for an account
      properties:
        dtbp_check:
          type: string
          description: 'both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.'
          example: both
          enum:
            - both
            - entry
            - exit
        trade_confirm_email:
          type: string
          description: 'all or none. If none, emails for order fills are not sent.'
          enum:
            - all
            - none
        suspend_trade:
          type: boolean
          description: 'If true, new orders are blocked.'
        no_shorting:
          type: boolean
          description: 'If true, account becomes long-only mode.'
        fractional_trading:
          type: boolean
          description: 'If true, account is able to participate in fractional trading'
        max_margin_multiplier:
          type: string
          description: Can be "1" or "2"
        pdt_check:
          type: string
          example: entry
    AccountCreationRequest:
      type: object
      title: AccountCreationRequest
      description: Represents the fields required to create a new account
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        identity:
          $ref: '#/components/schemas/Identity'
        disclosures:
          $ref: '#/components/schemas/Disclosures'
        agreements:
          $ref: '#/components/schemas/Agreements'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentUploadRequest'
        trusted_contact:
          $ref: '#/components/schemas/TrustedContact'
      required:
        - contact
        - identity
        - disclosures
        - agreements
    TaxIdType:
      type: string
      title: TaxIdType
      enum:
        - NOT_SPECIFIED
        - USA_SSN
        - ARG_AG_CUIT
        - AUS_TFN
        - AUS_ABN
        - BOL_NIT
        - BRA_CPF
        - CHL_RUT
        - COL_NIT
        - CRI_NITE
        - DEU_TAX_ID
        - DOM_RNC
        - ECU_RUC
        - FRA_SPI
        - GBR_UTR
        - GBR_NINO
        - GTM_NIT
        - HND_RTN
        - HUN_TIN
        - IDN_KTP
        - IND_PAN
        - ISR_TAX_ID
        - ITA_TAX_ID
        - JPN_TAX_ID
        - MEX_RFC
        - NIC_RUC
        - NLD_TIN
        - PAN_RUC
        - PER_RUC
        - PRY_RUC
        - SGP_NRIC
        - SGP_FIN
        - SGP_ASGD
        - SGP_ITR
        - SLV_NIT
        - SWE_TAX_ID
        - URY_RUT
        - VEN_RIF
      description: |-
        An Enum of the various kinds of Tax ID formats Alpaca supports.

        Possible Values are:


        - **USA_SSN**
        USA Social Security Number

        - **ARG_AR_CUIT**
        Argentina CUIT

        - **AUS_TFN**
        Australian Tax File Number

        - **AUS_ABN**
        Australian Business Number

        - **BOL_NIT**
        Bolivia NIT

        - **BRA_CPF**
        Brazil CPF

        - **CHL_RUT**
        Chile RUT

        - **COL_NIT**
        Colombia NIT

        - **CRI_NITE**
        Costa Rica NITE

        - **DEU_TAX_ID**
        Germany Tax ID (Identifikationsnummer)

        - **DOM_RNC**
        Dominican Republic RNC

        - **ECU_RUC**
        Ecuador RUC

        - **FRA_SPI**
        France SPI (Reference Tax Number)

        - **GBR_UTR**
        UK UTR (Unique Taxpayer Reference)

        - **GBR_NINO**
        UK NINO (National Insurance Number)

        - **GTM_NIT**
        Guatemala NIT

        - **HND_RTN**
        Honduras RTN

        - **HUN_TIN**
        Hungary TIN Number

        - **IDN_KTP**
        Indonesia KTP

        - **IND_PAN**
        India PAN Number

        - **ISR_TAX_ID**
        Israel Tax ID (Teudat Zehut)

        - **ITA_TAX_ID**
        Italy Tax ID (Codice Fiscale)

        - **JPN_TAX_ID**
        Japan Tax ID (Koijin Bango)

        - **MEX_RFC**
        Mexico RFC

        - **NIC_RUC**
        Nicaragua RUC

        - **NLD_TIN**
        Netherlands TIN Number

        - **PAN_RUC**
        Panama RUC

        - **PER_RUC**
        Peru RUC

        - **PRY_RUC**
        Paraguay RUC

        - **SGP_NRIC**
        Singapore NRIC

        - **SGP_FIN**
        Singapore FIN

        - **SGP_ASGD**
        Singapore ASGD

        - **SGP_ITR**
        Singapore ITR

        - **SLV_NIT**
        El Salvador NIT

        - **SWE_TAX_ID**
        Sweden Tax ID (Personnummer)

        - **URY_RUT**
        Uruguay RUT

        - **VEN_RIF**
        Venezuela RIF

        - **NOT_SPECIFIED**
        Other Tax IDs
      example: USA_SSN
    ApplicationDocument:
      type: object
      description: |
        If an account has documents on the application submission,
        it has the ApplicationDocument model in exchange with
        DocumentUpload.
      properties:
        id:
          type: string
          format: uuid
        document_type:
          $ref: '#/components/schemas/DocumentType'
        document_sub_type:
          type: string
        mime_type:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - document_type
        - created_at
      example:
        id: 0d18ae51-3c94-4511-b209-101e1666416b
        document_type: identity_verification
        document_sub_type: passport
        mime_type: image/jpeg
        created_at: '2019-09-30T23:55:31.185998Z'
    DocumentUpload:
      type: object
      description: |
        If an account has documents after the submission, it has
        the Document model in exchange with DocumentUpload.
      properties:
        document_type:
          $ref: '#/components/schemas/DocumentType'
        document_sub_type:
          type: string
          example: passport
        content:
          type: string
          format: base64
          example: /9j/Cg==
        mime_type:
          type: string
          example: image/jpeg
      required:
        - document_type
        - content
        - mime_type
      example:
        document_type: identity_verification
        document_sub_type: passport
        content: /9j/Cg==
        mime_type: image/jpeg
    Activity:
      title: Activity
      description: Base for activity types
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: 88b5f678-fef5-447b-af15-f21e367e6d8c
            account_id:
              type: string
              format: uuid
              example: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4
            activity_type:
              $ref: '#/components/schemas/ActivityType'
        - oneOf:
            - $ref: '#/components/schemas/TradeActivity'
            - $ref: '#/components/schemas/NonTradeActivity'
    ActivityType:
      title: ActivityType
      type: string
      enum:
        - FILL
        - ACATC
        - ACATS
        - CSD
        - CSR
        - CSW
        - DIV
        - DIVCGL
        - DIVCGS
        - DIVNRA
        - DIVROC
        - DIVTXEX
        - INT
        - JNLC
        - JNLS
        - MA
        - NC
        - PTC
        - REORG
        - SSO
        - SSP
    TradeActivity:
      title: TradeActivity
      type: object
      properties:
        transaction_time:
          type: string
          format: timestamp
          example: '2021-05-10T14:01:04.650275Z'
          description: Valid only for trading activity types. Null for non-trading activites.
        type:
          type: string
          enum:
            - fill
            - partial_fill
          example: fill
          description: Valid only for trading activity types. Null for non-trading activites.
        price:
          type: string
          example: '3.1415'
          description: Valid only for trading activity types. Null for non-trading activites.
        qty:
          type: string
          example: '0.38921'
          description: Valid only for trading activity types. Null for non-trading activites.
        side:
          type: string
          enum:
            - buy
            - sell
          example: sell
          description: Valid only for trading activity types. Null for non-trading activites.
        symbol:
          type: string
          example: AAPL
          description: Valid only for trading activity types. Null for non-trading activites.
        leaves_qty:
          type: string
          example: '0.5123'
          description: Valid only for trading activity types. Null for non-trading activites.
        order_id:
          type: string
          format: uuid
          example: fe060a1b-5b45-4eba-ba46-c3a3345d8255
          description: Valid only for trading activity types. Null for non-trading activites.
        cum_qty:
          type: string
          example: '0.9723'
          description: Valid only for trading activity types. Null for non-trading activites.
        order_status:
          type: string
          enum:
            - new
            - partially_filled
            - filled
            - done_for_day
            - canceled
            - expired
            - replaced
            - pending_cancel
            - pending_replace
            - accepted
            - pending_new
            - accepted_for_bidding
            - stopped
            - rejected
            - suspended
            - calculated
          example: filled
          description: Valid only for trading activity types. Null for non-trading activites.
    NonTradeActivity:
      title: NonTradeActivity
      type: object
      properties:
        date:
          type: string
          format: date
          example: '2021-05-21'
          description: Valid only for non-trading activity types. Null for trading activites.
        net_amount:
          type: string
          example: '1234'
          description: Valid only for non-trading activity types. Null for trading activites.
        description:
          type: string
          example: Example description
          description: Valid only for non-trading activity types. Null for trading activites.
        status:
          type: string
          enum:
            - executed
            - correct
            - canceled
          example: executed
          description: Valid only for non-trading activity types. Null for trading activites.
        symbol:
          type: string
          example: AAPL
          description: Valid only for non-trading activity types. Null for trading activites.
        qty:
          type: string
          example: '0.38921'
          description: Valid only for non-trading activity types. Null for trading activites.
        per_share_amount:
          type: string
          example: '0.38921'
          description: Valid only for non-trading activity types. Null for trading activites.
    ActivityItem:
      title: ActivityItem
      anyOf:
        - $ref: '#/components/schemas/TradeActivity'
        - $ref: '#/components/schemas/NonTradeActivity'
    DocumentType:
      type: string
      enum:
        - identity_verification
        - address_verification
        - date_of_birth_verification
        - tax_id_verification
        - account_approval_letter
        - cip_result
      description: |
        - identity_verification:
          identity verification document

        - address_verification:
          address verification document

        - date_of_birth_verification:
          date of birth verification document

        - tax_id_verification:
          tax ID verification document

        - account_approval_letter:
          407 approval letter

        - cip_result:
          initial CIP result
      example: identity_verification
    DocumentUploadRequest:
      type: object
      description: |
        If an account has documents after the submission, it has
        the Document model in exchange with DocumentUploadRequest.
      properties:
        document_type:
          $ref: '#/components/schemas/DocumentType'
        document_sub_type:
          type: string
          example: passport
        content:
          type: string
          format: base64
          example: /9j/Cg==
        mime_type:
          type: string
          example: image/jpeg
      required:
        - document_type
        - content
        - mime_type
      example:
        document_type: identity_verification
        document_sub_type: passport
        content: /9j/Cg==
        mime_type: image/jpeg
      title: DocumentUploadRequest
      x-examples:
        example-1:
          document_type: identity_verification
          document_sub_type: passport
          content: /9j/Cg==
          mime_type: image/jpeg
    KYCResult:
      type: object
      description: Hold information about the result of KYC.
      properties:
        reject:
          type: object
        accept:
          type: object
        indeterminate:
          type: object
        addidional_information:
          type: string
    StreetAddress:
      type: string
      example: 20 N San Mateo Dr
    Contact:
      type: object
      description: |
        Contact is the model for the account owner contact information.
      properties:
        email_address:
          type: string
          format: email
          example: john.doe@example.com
        phone_number:
          type: string
          description: 'with country code, no hyphen or space'
          example: '+15556667788'
        street_address:
          type: array
          items:
            $ref: '#/components/schemas/StreetAddress'
        city:
          type: string
          example: San Mateo
        state:
          type: string
          example: CA
        postal_code:
          type: string
          example: '94401'
    Identity:
      type: object
      description: |
        Identity is the model to provide account owner’s identity information.
      example:
        given_name: John
        family_name: Doe
        date_of_birth: '1990-01-01'
        tax_id: 666-55-4321
        tax_id_type: USA_SSN
        country_of_citizenship: AUS
        country_of_birth: AUS
        country_of_tax_residence: USA
        funding_source:
          - employment_income
      properties:
        given_name:
          type: string
          example: John
        family_name:
          type: string
          example: Doe
        date_of_birth:
          type: string
          format: date
          example: '1990-01-01'
        tax_id:
          type: string
          example: 666-55-4321
        tax_id_type:
          $ref: '#/components/schemas/TaxIdType'
        country_of_citizenship:
          type: string
          description: |
            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
          example: USA
        country_of_birth:
          type: string
          description: |
            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
          example: USA
        country_of_tax_residence:
          type: string
          description: |
            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
          example: USA
        funding_source:
          type: array
          items:
            type: string
            enum:
              - employment_income
              - investments
              - inheritance
              - business_income
              - savings
              - family
        annual_income_min:
          type: number
        annual_income_max:
          type: number
        liquid_net_worth_min:
          type: number
        liquid_net_worth_max:
          type: number
        total_net_worth_min:
          type: number
        total_net_worth_max:
          type: number
        extra:
          type: object
          description: |
            any extra information used for KYC purposes
      required:
        - given_name
        - family_name
        - date_of_birth
        - country_of_tax_residence
        - funding_source
    Disclosures:
      type: object
      description: |
        Disclosures fields denote if the account owner falls under
        each category defined by FINRA rule. The client has to ask
        questions for the end user and the values should reflect
        their answers.
        If one of the answers is true (yes), the account goes into
        ACTION_REQUIRED status.
      properties:
        employment_status:
          type: string
          enum:
            - unemployed
            - employed
            - student
            - retired
        employer_name:
          type: string
        employer_address:
          type: string
        employment_position:
          type: string
        is_control_person:
          type: boolean
        is_affiliated_exchange_or_finra:
          type: boolean
        is_politically_exposed:
          type: boolean
        immediate_family_exposed:
          type: boolean
      required:
        - is_control_person
        - is_affiliated_exchange_or_finra
        - is_politically_exposed
        - immediate_family_exposed
      example:
        is_control_person: false
        is_affiliated_exchange_or_finra: false
        is_politically_exposed: false
        immediate_family_exposed: false
    Agreement:
      type: object
      properties:
        agreement:
          type: string
          enum:
            - margin_agreement
            - account_agreement
            - customer_agreement
          description: |
            - margin_agreement: Alpaca Margin Agreement
            - account_agreement: Alpaca Account Agreement
            - customer_agreement: Alpaca Customer Agreement
        signed_at:
          type: string
          example: '2019-09-11T18:09:33Z'
        ip_address:
          type: string
          format: ipv4
          example: 185.13.21.99
      required:
        - agreement
        - signed_at
        - ip_address
    Agreements:
      type: array
      description: 'The client has to present Alpaca Account Agreement and Margin Agreement to the end user, and have them read full sentences.'
      items:
        $ref: '#/components/schemas/Agreement'
    TrustedContact:
      type: object
      description: |
        This model input is optional. However, the client should
        make reasonable effort to obtain the trusted contact information.
        See more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)
      properties:
        given_name:
          type: string
          example: Jane
        family_name:
          type: string
          example: Doe
        email_address:
          type: string
          format: email
          description: |
            at least one of `email_address`, `phone_number` or
            `street_address` is required
          example: jane.doe@example.com
        phone_number:
          type: string
          description: |
            at least one of `email_address`, `phone_number` or
            `street_address` is required
        street_address:
          type: array
          items:
            type: string
          description: |
            at least one of `email_address`, `phone_number` or
            `street_address` is required
        city:
          type: string
          description: |
            required if `street_address` is set
        state:
          type: string
          description: |
            required if `street_address` is set
        postal_code:
          type: string
          description: |
            required if `street_address` is set
        country:
          type: string
          description: |
            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
            required if `street_address` is set
      required:
        - given_name
        - family_name
      example:
        given_name: Jane
        family_name: Doe
        email_address: jane.doe@example.com
    CreateOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          example: AAPL
        qty:
          type: string
          format: decimal
          example: '4.124'
        notional:
          type: string
          format: decimal
          example: '3'
        side:
          $ref: '#/components/schemas/OrderSide'
        type:
          $ref: '#/components/schemas/OrderType'
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        limit_price:
          type: string
          format: decimal
          example: '3.14'
        stop_price:
          type: string
          format: decimal
          example: '3.14'
        trail_price:
          type: string
          format: decimal
          example: '3.14'
        trail_percent:
          type: string
          format: decimal
          example: '5.0'
        extended_hours:
          type: boolean
          example: false
        client_order_id:
          type: string
          example: eb9e2aaa-f71a-4f51-b5b4-52a6c565dad4
        order_class:
          $ref: '#/components/schemas/OrderClass'
        take_profit:
          type: object
          properties:
            limit_price:
              type: string
              format: decimal
              example: '3.14'
        stop_loss:
          type: object
          properties:
            stop_price:
              type: string
              format: decimal
              example: '3.14'
            limit_price:
              type: string
              format: decimal
              example: '3.14'
        commission:
          type: string
          format: decimal
          example: '1.0'
      required:
        - symbol
        - side
        - type
        - time_in_force
    AssetClass:
      type: string
      enum:
        - us_equity
        - crypto
    OrderType:
      type: string
      enum:
        - market
        - limit
        - stop
        - stop_limit
        - trailing_stop
      example: stop
    OrderSide:
      type: string
      enum:
        - buy
        - sell
      example: buy
    OrderClass:
      type: string
      enum:
        - simple
        - bracket
        - oco
        - oto
      example: bracket
    TimeInForce:
      type: string
      enum:
        - day
        - gtc
        - opg
        - cls
        - ioc
        - fok
      example: gtc
    OrderStatus:
      type: string
      enum:
        - new
        - partially_filled
        - filled
        - done_for_day
        - canceled
        - expired
        - replaced
        - pending_cancel
        - pending_replace
        - accepted
        - pending_new
        - accepted_for_bidding
        - stopped
        - rejected
        - suspended
        - calculated
      example: filled
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        client_order_id:
          type: string
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        created_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        updated_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        submitted_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        filled_at:
          nullable: true
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        expired_at:
          nullable: true
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        canceled_at:
          nullable: true
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        failed_at:
          nullable: true
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        replaced_at:
          nullable: true
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
        replaced_by:
          nullable: true
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        replaces:
          nullable: true
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        asset_id:
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        symbol:
          type: string
          example: AALP
        asset_class:
          $ref: '#/components/schemas/AssetClass'
        notional:
          nullable: true
          type: string
          format: decimal
          example: '4.2'
        qty:
          nullable: true
          type: string
          format: decimal
          example: '4.2'
        filled_qty:
          type: string
          format: decimal
          example: '4.2'
        filled_avg_price:
          nullable: true
          type: string
          format: decimal
          example: '4.2'
        order_class:
          $ref: '#/components/schemas/OrderClass'
        order_type:
          $ref: '#/components/schemas/OrderType'
        type:
          $ref: '#/components/schemas/OrderType'
        side:
          $ref: '#/components/schemas/OrderSide'
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        limit_price:
          nullable: true
          type: string
          format: decimal
          example: '3.14'
        stop_price:
          nullable: true
          type: string
          format: decimal
          example: '3.14'
        status:
          $ref: '#/components/schemas/OrderStatus'
        extended_hours:
          type: boolean
          example: true
        legs:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Order'
        trail_price:
          nullable: true
          type: string
          format: decimal
          example: '3.14'
        trail_percent:
          nullable: true
          type: string
          format: decimal
          example: '5.0'
        hwm:
          nullable: true
          type: string
          format: decimal
          example: '3.14'
        commission:
          type: string
          format: decimal
          example: '3.14'
    UpdateOrderRequest:
      type: object
      properties:
        qty:
          type: string
          format: decimal
          example: '4.2'
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        limit_price:
          type: string
          format: decimal
          example: '3.14'
        stop_price:
          type: string
          format: decimal
          example: '3.14'
        trail:
          type: string
          format: decimal
          example: '3.14'
        client_order_id:
          type: string
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - created_at
        - updated_at
      title: OrderUpdateRequest
      description: ''
    Bank:
      type: object
      x-examples:
        example-1:
          id: 8475c676-68e3-4cfc-a683-9ca2f47a6172
          account_id: 56712986-9ff7-4d8f-8e52-077e099e533e
          name: Bank XYZ
          status: QUEUED
          country: ''
          state_province: ''
          postal_code: ''
          city: ''
          street_address: ''
          account_number: 123456789abc
          bank_code: '123456789'
          bank_code_type: ABA
          created_at: '2022-02-11T21:35:19.268681613Z'
          updated_at: '2022-02-11T21:35:19.268681613Z'
      properties:
        id:
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        created_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
          description: 'Format: 2020-01-01T01:01:01Z'
        updated_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
          description: 'Format: 2020-01-01T01:01:01Z'
        account_id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - QUEUED
            - CANCEL_REQUESTED
            - SENT_TO_CLEARING
            - APPROVED
            - CANCELED
          description: 'QUEUED, CANCEL_REQUESTED, SENT_TO_CLEARING, APPROVED, CANCELED'
        name:
          type: string
          description: Name of recipient bank
        bank_code:
          type: string
          description: 9-Digit ABA RTN (Routing Number) or BIC
        bank_code_type:
          type: string
          enum:
            - ABA
            - BIC
          description: ABA (Domestic) or BIC (International)
        country:
          type: string
          description: Only for international banks
        state_province:
          type: string
          description: Only for international banks
        postal_code:
          type: string
          description: Only for international banks
        city:
          type: string
          description: Only for international banks
        street_address:
          type: string
          description: Only for international banks
        account_number:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
        - bank_code
        - bank_code_type
        - account_number
    CreateBankRequest:
      title: CreateBankRequest
      type: object
      properties:
        name:
          type: string
          description: Name of recipient bank
        bank_code:
          type: string
          description: 9-Digit ABA RTN (Routing Number) or BIC
        bank_code_type:
          type: string
          enum:
            - ABA
            - BIC
          description: ABA (Domestic) or BIC (International)
        country:
          type: string
          description: Only for international banks
        state_province:
          type: string
          description: Only for international banks
        postal_code:
          type: string
          description: Only for international banks
        city:
          type: string
          description: Only for international banks
        street_address:
          type: string
          description: Only for international banks
        account_number:
          type: string
      required:
        - name
        - bank_code
        - bank_code_type
        - account_number
      description: Represents the possible fields to send when creating a new associated Bank resource for an account
    IdentifiedResource:
      title: IdentifiedResource
      type: object
      x-examples:
        example-1:
          id: 61e69015-8549-4bfd-b9c3-01e75843f47d
          created_at: '2021-03-16T18:38:01.942282Z'
          updated_at: '2021-03-16T18:38:01.942282Z'
      properties:
        id:
          type: string
          format: uuid
          example: 61e69015-8549-4bfd-b9c3-01e75843f47d
        created_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
          description: 'Format: 2020-01-01T01:01:01Z'
        updated_at:
          type: string
          format: date-time
          example: '2021-03-16T18:38:01.942282Z'
          description: 'Format: 2020-01-01T01:01:01Z'
      required:
        - id
        - created_at
        - updated_at
      description: 'TODO: Remove this model'
    ACHRelationshipData:
      description: ''
      type: object
      properties:
        account_owner_name:
          type: string
          minLength: 1
        bank_account_type:
          type: string
          minLength: 1
          enum:
            - CHECKING
            - SAVINGS
        bank_account_number:
          type: string
          minLength: 1
        bank_routing_number:
          type: string
          minLength: 1
        nickname:
          type: string
          minLength: 1
      required:
        - account_owner_name
        - bank_account_type
        - bank_account_number
        - bank_routing_number
      title: ACHRelationshipData
    ACHRelationshipResource:
      title: ACHRelationshipResource
      allOf:
        - $ref: '#/components/schemas/IdentifiedResource'
        - $ref: '#/components/schemas/ACHRelationshipData'
        - type: object
          properties:
            account_id:
              type: string
              format: uuid
            status:
              type: string
              enum:
                - QUEUED
                - APPROVED
                - PENDING
                - CANCEL_REQUESTED
          required:
            - account_id
            - status
    UntypedACHTransferData:
      title: UntypedACHTransferData
      allOf:
        - $ref: '#/components/schemas/UntypedTransferData'
        - type: object
          properties:
            relationship_id:
              type: string
              format: uuid
          required:
            - relationship_id
    TransferResource:
      title: TransferResource
      allOf:
        - $ref: '#/components/schemas/IdentifiedResource'
        - type: object
          properties:
            type:
              type: string
              enum:
                - ach
                - wire
            status:
              type: string
              enum:
                - QUEUED
                - APPROVAL_PENDING
                - PENDING
                - SENT_TO_CLEARING
                - REJECTED
                - CANCELED
                - APPROVED
                - COMPLETE
                - RETURNED
            account_id:
              type: string
              format: uuid
            reason:
              type: string
              nullable: true
            expires_at:
              type: string
              format: date-time
          required:
            - type
            - status
            - account_id
            - expires_at
        - oneOf:
            - $ref: '#/components/schemas/UntypedACHTransferData'
            - $ref: '#/components/schemas/UntypedWireTransferData'
          discriminator:
            propertyName: type
            mapping:
              ach: '#/components/schemas/UntypedACHTransferData'
              wire: '#/components/schemas/UntypedWireTransferData'
    TransferData:
      title: TransferData
      allOf:
        - type: object
          properties:
            transfer_type:
              type: string
              enum:
                - ach
                - wire
            timing:
              type: string
              enum:
                - immediate
          required:
            - transfer_type
        - oneOf:
            - $ref: '#/components/schemas/UntypedACHTransferData'
            - $ref: '#/components/schemas/UntypedWireTransferData'
          discriminator:
            propertyName: transfer_type
            mapping:
              ach: '#/components/schemas/UntypedACHTransferData'
              wire: '#/components/schemas/UntypedWireTransferData'
    UntypedWireTransferData:
      allOf:
        - $ref: '#/components/schemas/UntypedTransferData'
        - type: object
          properties:
            additional_information:
              type: string
            bank_id:
              type: string
              format: uuid
          required:
            - bank_id
      title: UntypedWireTransferData
    UntypedTransferData:
      title: UntypedTransferData
      type: object
      properties:
        amount:
          type: string
          format: decimal
        direction:
          type: string
          enum:
            - INCOMING
            - OUTGOING
      required:
        - amount
        - direction
    CreateTransferRequest:
      title: CreateTransferRequest
      type: object
      properties:
        transfer_type:
          $ref: '#/components/schemas/TransferType'
        relationship_id:
          type: string
          format: uuid
          description: |-
            Required if type = `ach`

            The ach_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#creating-an-ach-relationship)
        bank_id:
          type: string
          format: uuid
          description: |-
            Required if type = `wire`

            The bank_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/bank/#creating-a-new-bank-relationship)
        amount:
          type: string
          format: decimal
          description: Must be > 0.00
        direction:
          $ref: '#/components/schemas/TransferDirection'
        timing:
          $ref: '#/components/schemas/TransferTiming'
        additional_information:
          type: string
          description: Additional details for when type = `wire`
          nullable: true
      required:
        - transfer_type
        - amount
        - direction
        - timing
      description: '[See main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#creating-a-transfer-entity)'
    Transfer:
      title: Transfer
      type: object
      x-examples:
        example-1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87
          bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8
          account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          type: ach
          status: QUEUED
          reason: string
          amount: string
          direction: INCOMING
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
          expires_at: '2019-08-24T14:15:22Z'
          additional_information: string
      description: |-
        Transfers allow you to transfer money/balance into your end customers' account (deposits) or out (withdrawal).

        [Main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#the-transfer-object)
      properties:
        id:
          type: string
          format: uuid
          description: The transfer ID
        relationship_id:
          type: string
          format: uuid
          description: The ACH relationship ID only present if type = "ach"
        bank_id:
          type: string
          format: uuid
          description: 'The ID of the Bank, only present if type = "wire"'
        account_id:
          type: string
          format: uuid
          description: The account ID
        type:
          $ref: '#/components/schemas/TransferType'
        status:
          $ref: '#/components/schemas/TransferStatus'
        reason:
          type: string
          description: Cause of the status
          nullable: true
        amount:
          type: string
          description: Must be > 0.00
        direction:
          $ref: '#/components/schemas/TransferDirection'
        created_at:
          type: string
          format: date-time
          description: Timedate when transfer was created
        updated_at:
          type: string
          format: date-time
          description: Timedate when transfer was updated
        expires_at:
          type: string
          format: date-time
          description: Timedate when transfer was expired
        additional_information:
          type: string
          description: Additional information. Only applies when type = "wire".
          nullable: true
        hold_until:
          type: string
          format: date-time
        instant_amount:
          type: string
      required:
        - id
        - account_id
        - type
        - status
        - amount
        - direction
        - created_at
    TransferType:
      type: string
      example: ach
      enum:
        - ach
        - wire
      description: |
        **NOTE:** The Sandbox environment currently only supports `ach`

        - **ach**
        Transfer via ACH (US Only).
        - **wire**
        Transfer via wire (international).
      title: TransferType
    TransferDirection:
      type: string
      example: INCOMING
      enum:
        - INCOMING
        - OUTGOING
      description: |
        - **INCOMING**
        Funds incoming to user’s account (deposit).
        - **OUTGOING**
        Funds outgoing from user’s account (withdrawal).
    TransferTiming:
      type: string
      example: immediate
      enum:
        - immediate
      description: |-
        Only `immediate` is currently supported.

        values:

        - **immediate**

        - **next_day**
    TransferStatus:
      type: string
      example: QUEUED
      enum:
        - QUEUED
        - APPROVAL_PENDING
        - PENDING
        - SENT_TO_CLEARING
        - REJECTED
        - CANCELED
        - APPROVED
        - COMPLETE
        - RETURNED
      description: |
        - **QUEUED**
        Transfer is in queue to be processed.
        - **APPROVAL_PENDING**
        Transfer is pending approval.
        - **PENDING**
        Transfer is pending processing.
        - **SENT_TO_CLEARING**
        Transfer is being processed by the clearing firm.
        - **REJECTED**
        Transfer is rejected.
        - **CANCELED**
        Client initiated transfer cancellation.
        - **APPROVED**
        Transfer is approved.
        - **COMPLETE**
        Transfer is completed.
        - **RETURNED**
        The bank issued an ACH return for the transfer.
    Journal:
      title: Journal
      example:
        id: h7h5g33f-ef01-4458-9a4b-9598727a406f
        entry_type: JNLS
        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24
        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa
        status: executed
        symbol: AAPL
        qty: '2'
        price: '128.23'
      x-examples:
        example:
          id: h7h5g33f-ef01-4458-9a4b-9598727a406f
          entry_type: JNLS
          from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24
          to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa
          status: executed
          symbol: AAPL
          qty: '2'
          settle_date: '2020-12-24'
          price: '128.23'
      description: 'Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.'
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: journal ID
            entry_type:
              type: string
              description: 'JNLS, for transfers of securities, or JNLC, for transfers of cash.'
              enum:
                - JNLS
                - JNLC
            from_account:
              type: string
              format: uuid
              description: account ID the shares go from
            to_account:
              type: string
              format: uuid
              description: account ID the shares go to
            settle_date:
              type: string
              format: date
            status:
              type: string
              enum:
                - pending
                - canceled
                - executed
                - queued
                - rejected
                - deleted
          required:
            - id
            - entry_type
            - from_account
            - to_account
            - settle_date
        - oneOf:
            - $ref: '#/components/schemas/JNLS'
            - $ref: '#/components/schemas/JNLC'
    JNLS:
      example:
        id: h7h5g33f-ef01-4458-9a4b-9598727a406s
        entry_type: JNLS
        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24
        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa
        status: executed
        symbol: AAPL
        qty: '2'
        price: '128.23'
      x-examples:
        example-1:
          id: h7h5g33f-ef01-4458-9a4b-9598727a406f
          entry_type: JNLS
          from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24
          to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa
          status: executed
          symbol: AAPL
          qty: '2'
          price: '128.23'
      title: JNLS
      type: object
      description: 'Journal information specific to securities transfers. This field is required for `Journal`s with an `entry_type` of `jnls` (securities transfers), but will be null for those with `jnlc` (cash transfers).'
      properties:
        symbol:
          type: string
          description: Only valid for JNLS journals. Null for JNLC.
        qty:
          type: string
          format: decimal
          description: Only valid for JNLS journals. Null for JNLC.
        price:
          type: string
          format: decimal
          description: Only valid for JNLS journals. Null for JNLC.
      required:
        - symbol
        - qty
        - price
    JNLC:
      example:
        id: f45g67h8-d1fc-4136-aa4f-cf4460aecdfc
        entry_type: JNLC
        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24
        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa
        status: pending
        net_amount: '115.5'
      description: 'Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).'
      type: object
      title: JNLC
      properties:
        description:
          type: string
          description: ID the amount goes to. Only valid for JNLC journals. Null for JNLS.
        net_amount:
          type: string
          format: decimal
          description: Only valid for JNLC journals. Null for JNLS.
        transmitter_name:
          type: string
          description: Only valid for JNLC journals. Null for JNLS. Max 255 characters.
        transmitter_account_number:
          type: string
          description: Only valid for JNLC journals. Null for JNLS.max 255 characters
        transmitter_address:
          type: string
          description: Only valid for JNLC journals. Null for JNLS.max 255 characters
        transmitter_financial_institution:
          type: string
          description: Only valid for JNLC journals. Null for JNLS.max 255 characters
        transmitter_timestamp:
          type: string
          format: date-time
          description: Only valid for JNLC journals. Null for JNLS.
      required:
        - net_amount
      x-examples: {}
    JournalData:
      title: JournalData
      type: object
      properties:
        entry_type:
          type: string
          enum:
            - JNLC
            - JNLS
        from_account:
          type: string
          format: uuid
        to_account:
          type: string
          format: uuid
        amount:
          type: string
          format: decimal
          description: |
            Required for JNLC.
            The dollar amount to move. It has to be
            a positive value.
        symbol:
          type: string
          description: |
            Required for JNLS.
        qty:
          type: string
          format: decimal
          description: |
            Required for JNLS.
            The number of shares to move. It has to be
            a positive value.
      required:
        - entry_type
        - from_account
        - to_account
    JournalResource:
      title: JournalResource
      oneOf:
        - $ref: '#/components/schemas/JNLC'
        - $ref: '#/components/schemas/JNLS'
      discriminator:
        propertyName: entry_type
        mapping:
          JNLC: '#/components/schemas/JNLC'
          JNLS: '#/components/schemas/JNLS'
    BatchJournalRequest:
      title: BatchJournalRequest
      type: object
      properties:
        entry_type:
          type: string
          enum:
            - JNLC
        from_account:
          type: string
          format: uuid
        description:
          type: string
        entries:
          type: array
          items:
            type: object
            properties:
              to_account:
                type: string
                format: uuid
              amount:
                type: string
            required:
              - to_account
              - amount
      required:
        - entry_type
        - from_account
    BatchJournalResponse:
      title: BatchJournalResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        error_message:
          type: string
        entry_type:
          type: string
          enum:
            - JNLC
        from_account:
          type: string
          format: uuid
        to_account:
          type: string
          format: uuid
        symbol:
          type: string
        qty:
          type: string
          nullable: true
        price:
          type: string
        status:
          type: string
          enum:
            - pending
            - canceled
            - executed
            - queued
            - rejected
            - deleted
        settle_date:
          type: string
          nullable: true
        system_date:
          type: string
          nullable: true
        net_amount:
          type: string
        description:
          type: string
      required:
        - id
        - error_message
        - entry_type
        - from_account
        - to_account
        - symbol
        - qty
        - price
        - status
        - settle_date
        - system_date
        - net_amount
        - description
    Asset:
      title: Asset
      type: object
      properties:
        id:
          type: string
          example: 904837e3-3b76-47ec-b432-046db621571b
        class:
          type: string
          enum:
            - us_equity
            - crypto
        exchange:
          type: string
          example: NASDAQ
        symbol:
          type: string
          example: AAPL
        name:
          type: string
          example: Apple Inc. Common Stock
        status:
          type: string
          enum:
            - active
            - inactive
        tradable:
          type: boolean
          example: true
        marginable:
          type: boolean
          example: true
        shortable:
          type: boolean
          example: true
        easy_to_borrow:
          type: boolean
          example: true
        fractionable:
          type: boolean
          example: true
    Position:
      description: ''
      type: object
      x-examples: {}
      properties:
        asset_id:
          type: string
          example: 904837e3-3b76-47ec-b432-046db621571b
          format: uuid
        symbol:
          type: string
          example: AAPL
        exchange:
          type: string
          example: NASDAQ
        asset_class:
          $ref: '#/components/schemas/AssetClass'
        avg_entry_price:
          type: string
          example: '100.0'
        qty:
          type: string
          example: '5'
        side:
          type: string
          example: long
          enum:
            - long
        market_value:
          type: string
          example: '600.0'
        cost_basis:
          type: string
          example: '500.0'
        unrealized_pl:
          type: string
          example: '100.0'
        unrealized_plpc:
          type: string
          example: '0.20'
        unrealized_intraday_pl:
          type: string
          example: '10.0'
        unrealized_intraday_plpc:
          type: string
          example: '0.0084'
        current_price:
          type: string
          example: '120.0'
        lastday_price:
          type: string
          example: '119.0'
        change_today:
          type: string
          example: '0.0084'
      required:
        - asset_id
        - symbol
        - exchange
        - asset_class
        - avg_entry_price
        - qty
        - side
        - market_value
        - cost_basis
        - unrealized_pl
        - unrealized_plpc
        - unrealized_intraday_pl
        - unrealized_intraday_plpc
        - current_price
        - lastday_price
        - change_today
    MarketDay:
      title: MarketDay
      type: object
      properties:
        date:
          type: string
          example: '2021-04-06'
        open:
          type: string
          example: '09:30'
        close:
          type: string
          example: '16:00'
        session_open:
          type: string
          example: '0700'
        session_close:
          type: string
          example: '1900'
      required:
        - date
        - open
        - close
    Error:
      title: Error
      type: object
      properties:
        code:
          type: number
        message:
          type: string
      required:
        - code
        - message
    Clock:
      description: Represents the current market time and open/close events.
      type: object
      x-examples:
        example:
          timestamp: '2018-04-01T12:00:00.000Z'
          is_open: true
          next_open: '2018-04-01T12:00:00.000Z'
          next_close: '2018-04-01T12:00:00.000Z'
      properties:
        timestamp:
          type: string
          minLength: 1
          format: time
        is_open:
          type: boolean
        next_open:
          type: string
          minLength: 1
          format: date-time
        next_close:
          type: string
          minLength: 1
          format: date-time
      required:
        - timestamp
        - is_open
        - next_open
        - next_close
    Document:
      type: array
      description: ''
      minItems: 1
      uniqueItems: true
      x-examples:
        example:
          - document_id: b792e8ae-2cb4-4209-85b9-32be4c2fcdd6
            document_type: account_statement
            document_date: '2019-08-24'
      items:
        type: object
        properties:
          document_id:
            type: string
            minLength: 1
            format: uuid
          document_type:
            $ref: '#/components/schemas/DocumentType'
          document_date:
            type: string
            minLength: 1
            format: date-time
        required:
          - document_id
          - document_type
          - document_date
    AccountStatusEvent:
      description: ''
      type: object
      x-examples:
        example:
          account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          account_number: string
          status_from: string
          status_to: string
          reason: string
          at: '2019-08-24T14:15:22Z'
      title: AccountStatusEvent
      properties:
        account_id:
          type: string
          minLength: 1
        account_number:
          type: string
          minLength: 1
        status_from:
          type: string
          minLength: 1
        status_to:
          type: string
          minLength: 1
        reason:
          type: string
          minLength: 1
        at:
          type: string
          minLength: 1
        kyc_result:
          $ref: '#/components/schemas/KYCResult'
      required:
        - account_id
        - account_number
        - status_from
        - status_to
        - reason
        - at
    Watchlist:
      title: Watchlist
      type: object
      description: Represents a set of securities observed by a user.
      properties:
        id:
          type: string
          format: uuid
          description: |
            Unique identifier of the watchlist itself.
        account_id:
          type: string
          format: uuid
          description: |
            Unique identifier of the account that owns this watchlist.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          pattern: '^[a-zA-Z0-9]+$'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    TradeAccount:
      type: object
      x-examples:
        example-1:
          id: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4
          account_number: '927584925'
          status: ACTIVE
          currency: USD
          buying_power: '103556.8572572922'
          regt_buying_power: '52921.2982330664'
          daytrading_buying_power: '103556.8572572922'
          cash: '24861.91'
          cash_withdrawable: '17861.91'
          cash_transferable: '24861.91'
          accrued_fees: '0'
          pending_transfer_out: '0'
          portfolio_value: '28059.3882330664'
          pattern_day_trader: true
          trading_blocked: false
          transfers_blocked: false
          account_blocked: false
          created_at: '2021-03-01T13:28:49.270232Z'
          trade_suspended_by_user: false
          multiplier: '2'
          shorting_enabled: true
          equity: '28059.3882330664'
          last_equity: '26977.323677655'
          long_market_value: '3197.4782330664'
          short_market_value: '0'
          initial_margin: '1598.7391165332'
          maintenance_margin: '959.24346991992'
          last_maintenance_margin: '934.6241032965'
          sma: '26758.0590204615'
          daytrade_count: 0
          previous_close: '2021-04-01T19:00:00-04:00'
          last_long_market_value: '3115.413677655'
          last_short_market_value: '0'
          last_cash: '23861.91'
          last_initial_margin: '1557.7068388275'
          last_regt_buying_power: '50839.233677655'
          last_daytrading_buying_power: '104433.9158860662'
          last_buying_power: '104433.9158860662'
          last_daytrade_count: 0
          clearing_broker: VELOX
        example-2:
          id: 56712986-9ff7-4d8f-8e52-077e099e533e
          account_number: '601612064'
          status: ACTIVE
          crypto_status: PAPER_ONLY
          currency: USD
          buying_power: '83567.42'
          regt_buying_power: '83567.42'
          daytrading_buying_power: '0'
          non_marginable_buying_power: '41783.71'
          cash: '83567.42'
          cash_withdrawable: '0'
          cash_transferable: '41783.71'
          accrued_fees: '0'
          pending_transfer_out: '0'
          pending_transfer_in: '0'
          portfolio_value: '83567.42'
          pattern_day_trader: false
          trading_blocked: false
          transfers_blocked: false
          account_blocked: false
          created_at: '2022-01-21T21:25:26.713802Z'
          trade_suspended_by_user: false
          multiplier: '1'
          shorting_enabled: false
          equity: '83567.42'
          last_equity: '41783.71'
          long_market_value: '0'
          short_market_value: '0'
          initial_margin: '0'
          maintenance_margin: '0'
          last_maintenance_margin: '0'
          sma: '0'
          daytrade_count: 0
          previous_close: '2022-02-08T19:00:00-05:00'
          last_long_market_value: '0'
          last_short_market_value: '0'
          last_cash: '41783.71'
          last_initial_margin: '0'
          last_regt_buying_power: '41783.71'
          last_daytrading_buying_power: '0'
          last_buying_power: '41783.71'
          last_daytrade_count: 0
          clearing_broker: VELOX
      properties:
        id:
          type: string
          example: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4
          format: uuid
        account_number:
          type: string
          example: '927584925'
        status:
          $ref: '#/components/schemas/AccountStatus'
        currency:
          type: string
          example: USD
          description: Always USD
        buying_power:
          type: string
          example: '12345.6789'
          description: Current available cash buying power. If multiplier = 2 then buying_power = max(equity-initial_margin(0) * 2). If multiplier = 1 then buying_power = cash.
        regt_buying_power:
          type: string
          example: '12345.6789'
          description: User’s buying power under Regulation T (excess equity - (equity - margin value) - * margin multiplier)
        daytrading_buying_power:
          type: string
          example: '12345.6789'
          description: Your buying power for day trades (continuously updated value)
        cash:
          type: string
          example: '12345.6789'
          description: Cash balance
        cash_withdrawable:
          type: string
          example: '12345.6789'
          description: Cash available for withdrawl
        cash_transferable:
          type: string
          example: '12345.6789'
          description: Cash available for transfer (JNLC)
        pending_transfer_out:
          type: string
          example: '12345.6789'
          description: Cash pending transfer out
        portfolio_value:
          type: string
          example: '12345.6789'
          description: Total value of cash + holding positions. (This field is deprecated. It is equivalent to the equity field.)
        pattern_day_trader:
          type: boolean
          example: false
          description: Whether account is flagged as pattern day trader or not
        trading_blocked:
          type: boolean
          example: false
          description: 'If true, the account is not allowed to place orders.'
        transfers_blocked:
          type: boolean
          example: false
          description: 'If true, the account is not allowed to request money transfers.'
        account_blocked:
          type: boolean
          example: false
          description: 'If true, the account activity by user is prohibited.'
        created_at:
          type: string
          example: '2021-03-01T13:28:49.270232Z'
          description: Timestamp this account was created at
        trade_suspended_by_user:
          type: boolean
          example: false
          description: 'If true, the account is not allowed to place orders.'
        multiplier:
          type: string
          example: '2'
          description: “1” or “2”
          enum:
            - '1'
            - '2'
        shorting_enabled:
          type: boolean
          example: false
          description: Flag to denote whether or not the account is permitted to short
        equity:
          type: string
          example: '12345.6789'
          description: cash + long_market_value + short_market_value
        last_equity:
          type: string
          example: '12345.6789'
          description: 'Equity as of previous trading day at 16:00:00 ET'
        long_market_value:
          type: string
          example: '12345.6789'
          description: Real-time MtM value of all long positions held in the account
        short_market_value:
          type: string
          example: '0'
          description: Real-time MtM value of all short positions held in the account
        initial_margin:
          type: string
          example: '12345.6789'
          description: Reg T initial margin requirement (continuously updated value)
        maintenance_margin:
          type: string
          example: '12345.6789'
          description: Maintenance margin requirement (continuously updated value)
        last_maintenance_margin:
          type: string
          example: '12345.6789'
          description: Maintenance margin requirement on the previous trading day
        sma:
          type: string
          example: '12345.6789'
          description: Value of Special Memorandum Account (will be used at a later date to provide additional buying_power)
        daytrade_count:
          type: integer
          example: 0
          description: The current number of daytrades that have been made in the last 5 trading days (inclusive of today)
        previous_close:
          type: string
          example: '2021-04-01T19:00:00-04:00'
          description: Previous sessions close time
        last_long_market_value:
          type: string
          example: '12345.6789'
          description: 'Value of all long positions as of previous trading day at 16:00:00 ET'
        last_short_market_value:
          type: string
          example: '0'
          description: 'Value of all short positions as of previous trading day at 16:00:00 ET'
        last_cash:
          type: string
          example: '12345.6789'
          description: 'Value of all cash as of previous trading day at 16:00:00 ET'
        last_initial_margin:
          type: string
          example: '12345.6789'
          description: 'Value of Reg T margin as of previous trading day at 16:00:00 ET'
        last_regt_buying_power:
          type: string
          example: '12345.6789'
          description: 'Value of Reg T buying power as of previous trading day at 16:00:00 ET'
        last_daytrading_buying_power:
          type: string
          example: '12345.6789'
          description: 'Value of daytrading buying power as of previous trading day at 16:00:00 ET'
        last_buying_power:
          type: string
          example: '12345.6789'
          description: 'Value of buying_power as of previous trading day at 16:00:00 ET'
        last_daytrade_count:
          type: integer
          example: 0
          description: 'Value of daytrade count as of previous trading day at 16:00:00 ET'
        clearing_broker:
          type: string
          example: Velox
          description: Clearing broker
      required:
        - id
        - account_number
        - status
  responses:
    Forbidden:
      description: Request is forbidden
      content:
        application/json:
          schema:
            type: string
    BadRequest:
      description: Malformed input.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotAuthorized:
      description: Client is not authorized for this operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies: {}
paths:
  /v1/accounts:
    get:
      tags:
        - Accounts
      summary: Get all accounts
      parameters:
        - name: query
          in: query
          schema:
            type: string
          description: 'Pass space-delimited tokens. The response will contain accounts that match with each of the tokens (logical AND). A match means the token is present in either the account’s associated account number, phone number, name, or e-mail address (logical OR).'
        - schema:
            type: string
            format: date-time
          in: query
          name: created_after
        - schema:
            type: string
            format: date-time
          in: query
          name: created_before
        - schema:
            type: string
          in: query
          name: status
          description: See the AccountStatus model for values
        - $ref: '#/components/parameters/Sort'
        - schema:
            type: string
          in: query
          name: entities
          description: Comma-delimited entity names to include in the response
      responses:
        '200':
          description: |
            The response is a list of Account model up to 1000 items
            per query order by created_at. To scroll the result,
            please use the created_after parameter.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      operationId: getAllAccounts
      description: Retrieves all accounts found by the query'
    post:
      tags:
        - Accounts
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: The post body is not well formed.
          content:
            application/json:
              schema:
                type: string
        '409':
          description: There is already an existing account registered with the same email address.
        '422':
          description: One of the input values is not a valid value.
          content:
            application/json:
              schema:
                type: string
      operationId: createAccount
      description: 'Submit an account application with KYC information. This will create a trading account for the end user. The account status may or may not be ACTIVE immediately and you will receive account status updates on the event API. '
  '/v1/accounts/{account_id}':
    get:
      summary: Get an account by Id.
      tags:
        - Accounts
      description: |
        You can query a specific account that you submitted to Alpaca by passing into the query the account_id associated with the account you’re retrieving.
      responses:
        '200':
          description: 'Will return an AccountExtended if an account with account_id exists, otherwise will throw an error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExtended'
      operationId: getAccount
    patch:
      tags:
        - Accounts
      summary: Update an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
      responses:
        '200':
          description: 'If all parameters are valid and updates have been made, it returns with status code 200. The response is the account model.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExtended'
        '400':
          description: The post body is not well formed.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: ​ The request body contains an attribute that is not permitted to be updated or you are attempting to set an invalid value.
          content:
            application/json:
              schema:
                type: string
      operationId: patchAccount
      description: |-
        This operation updates account information.

        If all parameters are valid and updates have been made, it returns with status code 200. The response is the account model.
    delete:
      summary: Request to close an account
      tags:
        - Accounts
      responses:
        '204':
          description: No content.
      operationId: deleteAccount
      description: This operation closes an active account.
    parameters:
      - $ref: '#/components/parameters/AccountID'
  '/v1/accounts/{account_id}/documents':
    get:
      summary: Return a list of account documents.
      tags:
        - Documents
      description: 'This endpoint allows you to query all the documents that belong to a certain account. You can filter by date, or type of document.'
      parameters:
        - name: start_date
          in: query
          description: optional date value to filter the list (inclusive).
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: optional date value to filter the list (inclusive).
          schema:
            type: string
            format: date
        - $ref: '#/components/parameters/DocumentType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
              examples: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
      operationId: getDocsForAccount
    parameters:
      - $ref: '#/components/parameters/AccountID'
  '/v1/accounts/{account_id}/documents/upload':
    post:
      tags:
        - Accounts
      summary: Upload a document to an already existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
      responses:
        '204':
          description: Success (No Content)
        '400':
          description: Bad Request. The body in the request is not valid.
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found. No account was found for this account_id
          content:
            application/json:
              schema:
                type: string
      operationId: uploadDocToAccount
      description: |-
        Upload a document to be attached to an account.

        Documents are binary objects whose contents are encoded in base64. Each encoded content size is limited to 10MB if you use Alpaca for KYCaaS. If you perform your own KYC there are no document size limitations.
    parameters:
      - $ref: '#/components/parameters/AccountID'
  '/v1/accounts/{account_id}/documents/{document_id}/download':
    get:
      security:
        - BasicAuth: []
      summary: Download a document file that belongs to an account.
      tags:
        - Documents
      description: |
        This endpoint allows you to download a document identified by the document_id passed in the header. The returned document is in PDF format.

        The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.
      responses:
        '301':
          description: |
            Redirect to the pre-signed download link for the document PDF file.
        '404':
          description: The document is not found.
      operationId: downloadDocFromAccount
    parameters:
      - $ref: '#/components/parameters/AccountID'
      - $ref: '#/components/parameters/DocumentID'
  '/v1/documents/{document_id}':
    get:
      security:
        - BasicAuth: []
      summary: Download a document file directly
      tags:
        - Documents
      description: |
        The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.
      responses:
        '301':
          description: |
            Redirect to the pre-signed download link for the document PDF file.
        '404':
          description: The document was not found.
      operationId: downloadDocumentById
    parameters:
      - $ref: '#/components/parameters/DocumentID'
  '/v1/accounts/{account_id}/recipient_banks':
    parameters:
      - $ref: '#/components/parameters/AccountID'
    get:
      tags:
        - Funding
        - Accounts
      summary: Retrieve bank relationships for an account
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
            example: ACTIVE
        - name: bank_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success. Returns the bank relationship model.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request. The body in the request is not valid.
      operationId: getRecipientBanks
      description: Retrieves Bank Relationships for an account
    post:
      tags:
        - Funding
        - Accounts
      summary: Create a Bank Relationship for an account
      parameters:
        - $ref: '#/components/parameters/AccountID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBankRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '400':
          description: Bad Request
        '409':
          description: Conflict
      operationId: createRecipientBank
      description: 'If successful, retrieves Bank Relationships for an account'
  '/v1/accounts/{account_id}/recipient_banks/{bank_id}':
    parameters:
      - $ref: '#/components/parameters/AccountID'
      - name: bank_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - Accounts
        - Funding
      summary: Delete a Bank Relationship for an account
      responses:
        '204':
          description: Success (No Content)
        '400':
          description: Bad Request
        '404':
          description: Bank Not Found
      operationId: deleteRecipientBank
      description: 'If successful, deletes Bank Relationship for an account'
  '/v1/accounts/{account_id}/transfers':
    parameters:
      - $ref: '#/components/parameters/AccountID'
    get:
      summary: Return a list of transfers for an account.
      tags:
        - Funding
        - Accounts
      description: |
        You can query a list of transfers for an account.


        You can filter requested transfers by values such as direction and status.
      parameters:
        - name: direction
          in: query
          schema:
            enum:
              - INCOMING
              - OUTGOING
            type: string
          description: INCOMING or OUTGOING
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
              examples:
                example-1:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87
                      bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8
                      account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                      type: ach
                      status: QUEUED
                      reason: string
                      amount: string
                      direction: INCOMING
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
                      expires_at: '2019-08-24T14:15:22Z'
                      additional_information: string
                example-2:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87
                      bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8
                      account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                      type: ach
                      status: QUEUED
                      reason: string
                      amount: string
                      direction: INCOMING
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
                      expires_at: '2019-08-24T14:15:22Z'
                      additional_information: string
      operationId: getTransfersForAccount
    post:
      summary: Request a new transfer
      tags:
        - Funding
        - Accounts
      description: |-
        Create a new transfer to an account to fund it.

        In the sandbox environment, you can instantly deposit to or withdraw from an account with a virtual money amount. In the production environment, this endpoint is used only for requesting an outgoing (withdrawal) wire transfer at this moment. For the wire transfer (in production), you need to create a bank resource first using the Bank API. For more on how to fund an account in sandbox please check out this tutorial [here](https://alpaca.markets/learn/fund-broker-api/).
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
      responses:
        '200':
          description: Successfully requested a transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
      operationId: createTransferForAccount
  '/v1/accounts/{account_id}/transfers/{transfer_id}':
    parameters:
      - $ref: '#/components/parameters/AccountID'
      - schema:
          type: string
          format: uuid
        name: transfer_id
        in: path
        required: true
        description: Tranfer identifier
    delete:
      summary: Request to close a transfer
      operationId: deleteTransfer
      responses:
        '204':
          description: Success (No Content)
        '404':
          $ref: '#/components/responses/NotFound'
      description: Request to close a transfer
      tags:
        - Accounts
        - Funding
  /v1/accounts/activities:
    get:
      tags:
        - Accounts
      summary: Retrieve account activities
      parameters:
        - name: account_id
          in: query
          schema:
            type: string
            format: uuid
          description: id of a single account to filter by
        - name: date
          in: query
          schema:
            type: string
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'
        - name: until
          in: query
          schema:
            type: string
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'
        - name: after
          in: query
          schema:
            type: string
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported. Cannot be used with date.'
        - $ref: '#/components/parameters/Direction'
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
          description: The maximum number of entries to return in the response
        - in: query
          name: page_token
          description: 'The Activity ID of the end of your current page of results. '
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
      operationId: getAccountActivities
      description: |-
        Returns an array of Activities

        Notes:
        * Pagination is handled using the `page_token` and `page_size` parameters.
        * `page_token` represents the ID of the end of your current page of results.
          for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results

        * If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.
        * If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.
        * `page_size` is the maximum number of entries to return in the response.
        * If `date` is not specified, the default and maximum value is 100.
        * If `date` is specified, the default behavior is to return all results, and there is no maximum page size.
  '/v1/accounts/activities/{activity_type}':
    parameters:
      - $ref: '#/components/parameters/ActivityType'
    get:
      tags:
        - Accounts
      parameters:
        - name: account_id
          in: query
          schema:
            type: string
            format: uuid
          description: id of a single account to filter by
        - name: date
          in: query
          schema:
            type: string
            format: date-time
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'
        - name: until
          in: query
          schema:
            type: string
            format: date-time
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'
        - name: after
          in: query
          schema:
            type: string
            format: date-time
          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'
        - $ref: '#/components/parameters/Direction'
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
          description: The maximum number of entries to return in the response
        - name: page_token
          in: query
          schema:
            type: string
          description: The ID of the end of your current page of results
      summary: Retrieve specific account activities
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
      operationId: getAccountActivitiesByType
      description: |-
        Retrieves an Array of Activies by type

        Notes:
        * Pagination is handled using the `page_token` and `page_size` parameters.
        * `page_token` represents the ID of the end of your current page of results.
          for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results

        * If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.
        * If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.
        * `page_size` is the maximum number of entries to return in the response.
        * If `date` is not specified, the default and maximum value is 100.
        * If `date` is specified, the default behavior is to return all results, and there is no maximum page size.
  '/v1/accounts/{account_id}/ach_relationships':
    parameters:
      - $ref: '#/components/parameters/AccountID'
    get:
      summary: Retrieve ACH Relationships for an account
      tags:
        - Accounts
        - Funding
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACHRelationshipResource'
      operationId: get_ach_relationships
      description: Returns a list of ACH Relationships
      security:
        - BasicAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: statuses
          description: Comma-separated status values
    post:
      summary: Create an ACH Relationship
      operationId: post_ach_relationships
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHRelationshipResource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          description: The account already has an active relationship.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: 'If successful, will return 200 code with a newly created ACH Relationship entity.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACHRelationshipData'
      security:
        - BasicAuth: []
      tags:
        - Accounts
        - Funding
  '/v1/accounts/{account_id}/ach_relationships/{ach_relationship_id}':
    parameters:
      - $ref: '#/components/parameters/AccountID'
      - schema:
          type: string
          format: uuid
        name: ach_relationship_id
        in: path
        required: true
        description: ACH relationship identifier
    delete:
      summary: Delete an existing ACH relationship
      operationId: delete_ach_relationship
      responses:
        '204':
          description: Success (No Content)
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Cancelation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Delete an existing ACH relationship
      security:
        - BasicAuth: []
      tags:
        - Accounts
        - Funding
  '/v1/trading/accounts/{account_id}/account':
    get:
      operationId: get_trading_account
      security:
        - BasicAuth: []
      summary: Retrieve trading details for an account.
      tags:
        - Accounts
      description: The response is a Trading Account model.
      parameters:
        - $ref: '#/components/parameters/AccountID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeAccount'
  '/v1/trading/accounts/{account_id}/positions':
    parameters:
      - $ref: '#/components/parameters/AccountID'
    get:
      summary: List open positions for an account
      tags:
        - Trading
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
      operationId: getPositions
      description: List open positions for an account
      security:
        - BasicAuth: []
  '/v1/trading/accounts/{account_id}/orders/{order_id}':
    parameters:
      - $ref: '#/components/parameters/AccountID'
      - $ref: '#/components/parameters/OrderID'
    get:
      security:
        - BasicAuth: []
      summary: Retrieves a single order for the given order_id.
      tags:
        - Trading
      description: Retrieves a single order for the given order_id.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get_order
    patch:
      security:
        - BasicAuth: []
      summary: Replaces a single order with updated parameters. Each parameter overrides the corresponding attribute of the existing order.
      tags:
        - Trading
      description: Replaces a single order with updated parameters. Each parameter overrides the corresponding attribute of the existing order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: patch_order
    delete:
      security:
        - BasicAuth: []
      summary: Attempts to cancel an open order.
      tags:
        - Trading
      description: Attempts to cancel an open order.
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: delete_order
  '/v1/trading/accounts/{account_id}/orders':
    parameters:
      - $ref: '#/components/parameters/AccountID'
    get:
      parameters:
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Until'
        - $ref: '#/components/parameters/Direction'
        - $ref: '#/components/parameters/Nested'
        - $ref: '#/components/parameters/Symbols'
      security:
        - BasicAuth: []
      summary: 'Retrieves a list of orders for the account, filtered by the supplied query parameters.'
      tags:
        - Trading
      description: 'Retrieves a list of orders for the account, filtered by the supplied query parameters.'
      responses:
        '200':
          description: 'Retrieves a list of orders for the account, filtered by the supplied query parameters.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get_orders
    post:
      security:
        - BasicAuth: []
      summary: Create an order for an account.
      tags:
        - Trading
      description: Create an order for an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: post_orders
    delete:
      security:
        - BasicAuth: []
      summary: Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled.
      tags:
        - Trading
      description: Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled.
      responses:
        '207':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    status:
                      type: integer
                    body:
                      $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: delete_orders
  /v1/assets:
    get:
      security:
        - BasicAuth: []
      tags:
        - Assets
      summary: Retrieve all assets
      description: Returns all assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
      operationId: getAssets
  '/v1/assets/{asset_id}':
    get:
      security:
        - BasicAuth: []
      tags:
        - Assets
      summary: Retrieve an asset by UUID
      description: 'Returns the requested asset, if found'
      parameters:
        - name: asset_id
          required: true
          in: path
          schema:
            type: string
          description: The UUID of the required asset
      responses:
        '200':
          description: Returns asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Asset not found
      operationId: getAssetByUUID
  '/v1/assets/{asset_id}/{symbol}':
    get:
      security:
        - BasicAuth: []
      tags:
        - Assets
      summary: Retrieve an asset by symbol
      description: 'The assets API serves as the master list of assets available for trade and data consumption from Alpaca. Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false.'
      parameters:
        - name: asset_id
          required: true
          in: path
          schema:
            type: string
          description: The UUID of the required asset
        - name: symbol
          required: true
          in: path
          schema:
            type: string
          description: The symbol of the required asset
      responses:
        '200':
          description: Returns asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Asset not found
      operationId: getAssetBySymbol
  /v1/calendar:
    get:
      security:
        - BasicAuth: []
      tags:
        - Calendar
      summary: Query market calendar
      parameters:
        - name: start
          description: The first date to retrieve data for. (Inclusive)
          in: query
          schema:
            type: string
        - name: end
          description: The last date to retrieve data for. (Inclusive)
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Returns the calendar object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarketDay'
      operationId: queryMarketCalendar
      description: 'The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.'
  /v1/clock:
    get:
      security:
        - BasicAuth: []
      tags:
        - Clock
      summary: Query market clock
      responses:
        '200':
          description: The current market's timestamp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clock'
              examples: {}
      operationId: queryMarketClock
      description: 'The Clock API serves the current market timestamp, whether or not the market is currently open, as well as the times of the next market open and close.'
  /v1/events/accounts/status:
    get:
      security:
        - BasicAuth: []
      summary: Subscribe to account status events (SSE).
      tags:
        - Accounts
        - Events
      description: |
        Query Params Rules:
        - `since` required if `until` specified
        - `since_id` required if `until_id` specified
        - `since` and `since_id` can’t be used at the same time
        Behavior:
        - if `since` or `since_id` not specified this will not return any historic data
        - if `until` or `until_id` reached stream will end (status 200)
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: since_id
          in: query
          schema:
            type: integer
        - name: until_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusEvent'
              examples: {}
      operationId: suscribeToSSE
  /v1/events/journals/status:
    get:
      security:
        - BasicAuth: []
      summary: Subscribe to journal events (SSE).
      tags:
        - Journals
        - Events
      description: |
        Query Params Rules:
        - `since` required if `until` specified
        - `since_id` required if `until_id` specified
        - `since` and `since_id` can’t be used at the same time
        Behavior:
        - if `since` or `since_id` not specified this will not return any historic data
        - if `until` or `until_id` reached stream will end (status 200)
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: since_id
          in: query
          schema:
            type: integer
        - name: until_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_id:
                    type: integer
                  at:
                    type: string
                    format: date-time
                  journal_id:
                    type: string
                    format: uuid
                  status_from:
                    type: string
                  status_to:
                    type: string
      operationId: subscribeJournalEvents
  /v1/journals:
    get:
      security:
        - BasicAuth: []
      summary: Return a list of requested journals.
      tags:
        - Journals
      parameters:
        - name: after
          in: query
          schema:
            type: string
            format: date
          description: by settle_date
        - name: before
          in: query
          schema:
            type: string
            format: date
          description: by settle_date
        - name: status
          in: query
          schema:
            type: string
            enum:
              - pending
              - canceled
              - executed
        - name: entry_type
          in: query
          schema:
            type: string
            enum:
              - JNLC
              - JNLS
        - name: to_account
          in: query
          schema:
            type: string
            format: uuid
        - name: from_account
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                discriminator:
                  propertyName: entry_type
                  mapping:
                    JNLC: '#/components/schemas/JNLC'
                    JNLS: '#/components/schemas/JNLS'
                type: array
                items:
                  $ref: '#/components/schemas/Journal'
      operationId: getJournals
      description: Returns an array of journal objects.
    post:
      security:
        - BasicAuth: []
      summary: Request a journal.
      tags:
        - Journals
      description: |
        A journal can be JNLC (move cash) or JNLS (move shares),
        dictated by `entry_type`.
        Generally, journal requests are subject to approval
        and starts from the `pending` status. The status
        changes are propagated through the Event API.
        Under certain conditions agreed for the partner, such journal
        transactions that meet the criteria are executed right away.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalData'
            example:
              entry_type: JNLC
              from_account: 7c891489-574f-4f9a-82f0-4082a07f4736
              to_account: 2d47a229-0c25-40a2-8cc7-b2c8821ff93a
              amount: '115.5'
      responses:
        '200':
          description: A journal is requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
        '400':
          description: One of the parameters is invalid.
          content:
            application/json:
              schema:
                type: string
        '403':
          description: The amount requested to move is not available.
          content:
            application/json:
              schema:
                type: string
        '404':
          description: One of the account is not found.
          content:
            application/json:
              schema:
                type: string
      operationId: post_journals
  '/v1/journals/{journal_id}':
    delete:
      security:
        - BasicAuth: []
      summary: Cancel a pending journal.
      tags:
        - Journals
      description: |
        You can cancel journals while they are in the pending
        status. An attempt to cancel already-executed journals
        will return an error.
      parameters:
        - name: journal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: |
            The cancel request succeeded.
        '404':
          description: |
            The journal is not found.
        '422':
          description: |
            The journal is not in the pending status.
      operationId: delete_journal
  /v1/journals/batch:
    post:
      summary: Create a batch journal
      operationId: post_journals_batch
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchJournalResponse'
      description: Every single request must be valid for the entire batch operation to succeed.
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchJournalRequest'
        description: ''
      tags:
        - Journals
  '/v1/oauth/clients/{client_id}':
    get:
      security:
        - BasicAuth: []
      summary: Returns an OAuth client.
      tags:
        - OAuth
      description: |
        The endpoint returns the details of OAuth client to
        display in the authorization page.
      parameters:
        - name: client_id
          required: true
          in: path
          schema:
            type: string
            format: uuid
        - name: response_type
          in: query
          schema:
            type: string
            enum:
              - code
              - token
            example: token
        - name: redirect_uri
          in: query
          schema:
            type: string
            example: 'https://example.com/authorize'
        - name: scope
          in: query
          schema:
            type: string
            example: general
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  url:
                    type: string
                  terms_of_use:
                    type: string
                    description: URL of Terms of Use
                  privacy_policy:
                    type: string
                    description: URL of Privacy Policy
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - DISABLED
                  redirect_uri:
                    type: array
                    items:
                      type: string
                  live_trading_approved:
                    type: boolean
                    example: true
                example:
                  client_id: 7a3c52a910e1dc2abbb14da2b6b8e711
                  name: TradingApp
                  description: Sample description
                  url: 'http://test.com'
                  terms_of_use: ''
                  privacy_policy: ''
                  status: ACTIVE
                  redirect_uri:
                    - 'http://localhost'
                  live_trading_approved: true
        '401':
          description: |
            Client does not exist or you do not have access to the client.
          content:
            application/json:
              schema:
                type: string
      operationId: returnOAuthClient
  /v1/oauth/token:
    post:
      security:
        - BasicAuth: []
      summary: Issue a token.
      tags:
        - OAuth
      description: |
        This operation issues an access token for an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: OAuth client ID
                client_secret:
                  type: string
                  description: OAuth client secret
                redirect_uri:
                  type: string
                  description: redirect URI for the OAuth flow
                scope:
                  type: string
                  description: scopes requested by the OAuth flow
                account_id:
                  type: string
                  format: uuid
                  description: end-user account ID
              example:
                client_id: 7a3c52a910e1dc2abbb14da2b6b8e711
                client_secret: bbb14da2b6b8e7117a3c52a910e1dc2a
                redirect_uri: 'http://localhost'
                scope: general
                account_id: 0d18ae51-3c94-4511-b209-101e1666416b
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    description: constant `Bearer`
                  scope:
                    type: string
                    description: token's scope
                example:
                  access_token: 87586f14-c3f4-4912-b107-f75bc17ff87a
                  token_type: Bearer
        '401':
          description: |
            Client does not exists, you do not have access to the client, or “client_secret” is incorrect.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: |
            Redirect URI or scope is invalid.
          content:
            application/json:
              schema:
                type: string
      operationId: issueToken
  /v1/oauth/authorize:
    post:
      security:
        - BasicAuth: []
      summary: Issue a code.
      tags:
        - OAuth
      description: |
        The operation issues an OAuth code which can be used
        in the OAuth code flow.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: OAuth client ID
                client_secret:
                  type: string
                  description: OAuth client secret
                redirect_uri:
                  type: string
                  description: redirect URI for the OAuth flow
                scope:
                  type: string
                  description: scopes requested by the OAuth flow
                account_id:
                  type: string
                  format: uuid
                  description: end-user account ID
              example:
                client_id: 7a3c52a910e1dc2abbb14da2b6b8e711
                client_secret: bbb14da2b6b8e7117a3c52a910e1dc2a
                redirect_uri: 'http://localhost'
                scope: general
                account_id: 0d18ae51-3c94-4511-b209-101e1666416b
      responses:
        '200':
          description: Successfully issued a code.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: OAuth code to exchange with a token later.
                  redirect_uri:
                    type: string
                    description: redirect URI
                  scope:
                    type: string
                    description: granted scopes
                example:
                  code: 912b5502-c983-40f7-a01d-6a66f13a754d
                  client_id: 7a3c52a910e1dc2abbb14da2b6b8e711
                  redirect_uri: 'http://localhost'
                  scope: general
        '401':
          description: |
            Client does not exists, you do not have access to the client, or “client_secret” is incorrect.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: |
            Redirect URI or scope is invalid.
          content:
            application/json:
              schema:
                type: string
      operationId: issueOAuthCode
  '/v1/trading/accounts/{account_id}/watchlists':
    parameters:
      - schema:
          type: string
          format: uuid
        name: account_id
        in: path
        required: true
        description: Unique identifier of an account.
    get:
      summary: Retrieve all watchlists
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watchlist'
      operationId: get-trading-accounts-account_id-watchlists
      description: Fetch a list of all watchlists currently in an account.
    post:
      summary: Create a new watchlist
      tags:
        - Watchlist
      operationId: post-trading-accounts-account_id-watchlists
      description: Returns the watchlist object
      responses:
        '200':
          description: Newly created watchlist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
  '/v1/accounts/{account_id}/watchlists/{watchlist_id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: account_id
        in: path
        required: true
        description: Unique identifier of an account
      - schema:
          type: string
          format: uuid
        name: watchlist_id
        in: path
        required: true
        description: Unique identifier of a watchlist
    get:
      summary: Manage watchlists
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      operationId: get-accounts-account_id-watchlists-watchlist_id
      description: Fetch a single watchlist by identifier.
    put:
      summary: Update an existing watchlist
      tags:
        - Watchlist
      operationId: put-accounts-account_id-watchlists-watchlist_id
      responses:
        '200':
          description: Updated watchlist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      description: Replace entirely the set of securities contained in the watchlist while optionally renaming it. Destructive operation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  pattern: '^[a-zA-Z0-9]+$'
                symbols:
                  description: New set of symbols for this watch list. Will destructively replace the prior set.
                  type: array
                  items:
                    type: string
                    example: '[''AAPL'', ''GOOG'']'
    delete:
      summary: Remove a watchlist
      tags:
        - Watchlist
      operationId: delete-accounts-account_id-watchlists-watchlist_id
      responses:
        '200':
          description: Watchlist deleted.
      description: Irrevocably delete a watchlist.
security:
  - BasicAuth: []
