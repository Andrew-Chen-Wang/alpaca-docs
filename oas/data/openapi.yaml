openapi: 3.0.0
info:
  title: Market Data API
  description: 'Access Alpacaâ€™s historical and real-time US stock market and crypto data through REST API and WebSocket. There are APIs for Stock Pricing, Crypto Pricing, and News.'
  version: 2.0.0
  contact:
    name: Alpaca Support
    email: support@alpaca.markets
    url: 'https://alpaca.markets/support'
  termsOfService: 'https://s3.amazonaws.com/files.alpaca.markets/disclosures/library/TermsAndConditions.pdf'
servers:
  - url: 'https://data.alpaca.markets'
    description: Production
  - description: Sandbox
    url: 'https://data.sandbox.alpaca.markets'
tags:
  - name: Stock Pricing Data API
  - name: Crypto Pricing Data API
  - name: default
paths:
  '/v2/stocks/{symbol}/bars':
    get:
      tags:
        - Stock Pricing Data API
      summary: Bars
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
        - name: timeframe
          in: query
          schema:
            type: string
          description: 'Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.'
          example: 1Min
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getBarsStocks
      description: The Bars API returns aggregate historical data for the requested security. Returns bars for the queried stock symbol.
  '/v2/stocks/{symbol}/trades':
    get:
      tags:
        - Stock Pricing Data API
      summary: Trades
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getTradesStocks
      description: The Trades API provides historcial trade data for a given ticker symbol on a specified date. Returns trades for the queried stock signal.
  '/v2/stocks/{symbol}/snapshot':
    get:
      tags:
        - Stock Pricing Data API
      summary: Snapshot
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getSnapshotStocks
      description: 'he Snapshot API for one ticker provides the latest trade, latest quote, minute bar daily bar and previous daily bar data for a given ticker symbol. This endpoint returns the snapshot for the requested security.'
  '/v2/stocks/{symbol}/quotes':
    get:
      tags:
        - Stock Pricing Data API
      summary: Quotes
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getQuotesStocks
      description: The Quotes API provides NBBO quotes for a single given ticker symbol at a specified date. Returns quotes (NBBOs) for the querried stock symbol.
  /v2/stocks/trades:
    get:
      tags:
        - Stock Pricing Data API
      summary: Multi Trades
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbols
          in: query
          schema:
            type: string
          description: The comma-separated symbols to query for
          example: 'AAPL,TSLA'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: geMultiTradesStocks
      description: The Multi Trades API provides historcial trade data for multiple given ticker symbols over a specified time period.
  /v2/stocks/quotes:
    get:
      tags:
        - Stock Pricing Data API
      summary: Multi Quotes
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbols
          in: query
          schema:
            type: string
          description: The comma-separated symbols to query for
          example: 'AAPL,TSLA'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getMultiQuotesStocks
      description: The Multi Quotes API provides NBBO quotes for multiple given ticker symbols over a specified time period.
  /v2/stocks/bars:
    get:
      tags:
        - Stock Pricing Data API
      summary: Multi Bars
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbols
          in: query
          schema:
            type: string
          description: The comma-separated symbols to query for
          example: 'AAPL,TSLA'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2020-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-08-26T11:00:00Z'
        - name: timeframe
          in: query
          schema:
            type: string
          description: 'Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.'
          example: 1Min
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getMultiBarsStocks
      description: he Multi Bars API returns aggregate historical data for multiple given ticker symbols over a specified time period.
  /v2/stocks/snapshots:
    get:
      tags:
        - Stock Pricing Data API
      summary: Multi Snapshot
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbols
          in: query
          schema:
            type: string
          description: The comma-separated symbols to query for
          example: 'AAPL,TSLA'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getMultiSnapshotStocks
      description: 'The Snapshot API for multiple tickers provides the latest trade, latest quote, minute bar daily bar and previous daily bar data for the given ticker symbols.'
  '/v2/stocks/{symbol}/trades/latest':
    get:
      tags:
        - Stock Pricing Data API
      summary: Latest Trade
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getStocksLatestTrade
      description: The Latest Trade API provides the latest trade data for a given ticker symbol.
  '/v2/stocks/{symbol}/quotes/latest':
    get:
      tags:
        - Stock Pricing Data API
      summary: Latest Quote
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: AAPL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getStocksLatestQuote
      description: The Latest Quote API provides the latest quote data for a given ticker symbol.
  '/v2/meta/conditions/{tickType}':
    get:
      tags:
        - Stock Pricing Data API
      summary: Meta Conditions
      description: get the conditions for either trades or quotes for an exchange identified by a tape exchange code
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: tape
          in: query
          schema:
            type: string
          description: 'A, B, or C'
          example: A
        - name: tickType
          in: path
          schema:
            type: string
          required: true
          description: trade or quote
          example: trade
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getMetaConditions
  /v2/meta/exchanges:
    get:
      tags:
        - Stock Pricing Data API
      summary: Meta Exchanges
      description: Get the list of stock exchanges which are supported by Alpaca.
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getMetaExchanges
  '/v1beta1/crypto/{symbol}/trades':
    get:
      tags:
        - Crypto Pricing Data API
      summary: Trades
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-09-10T11:00:00Z'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: BTCUSD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getCryptoTrades
      description: The Trades API provides historcial trade data for a given crypto symbol on a specified date. Returns trades for the queried crypto symbol
  '/v1beta1/crypto/{symbol}/bars':
    get:
      tags:
        - Crypto Pricing Data API
      summary: Bars
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-09-10T11:00:00Z'
        - name: timeframe
          in: query
          schema:
            type: string
          description: 'Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.'
          example: 1Min
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: BTCUSD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getCryptoBars
      description: The Bars API returns aggregate historical data for the requested securities.. Returns bars for the queried crypto symbol
  '/v1beta1/crypto/{symbol}/quotes':
    get:
      tags:
        - Crypto Pricing Data API
      summary: Quotes
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-04-01T0:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-09-10T11:00:00Z'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          description: The symbol to query for
          example: BTCUSD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getCryptoQuotes
      description: The Quotes API provides quotes for a given crypto symbol at a specified date. Returns quotes for the queried crypto symbol
  /v1beta1/crypto/bars:
    get:
      tags:
        - Crypto Pricing Data API
      summary: Multi Bars
      description: returns aggregate historical data for the requested crypto
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbols
          in: query
          schema:
            type: string
          description: The comma-separated symbols to query for
          example: 'BTCUSD,ETHUSD'
        - name: start
          in: query
          schema:
            type: string
          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-09-01T9:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
          example: '2021-09-10T10:00:00Z'
        - name: timeframe
          in: query
          schema:
            type: string
          description: 'Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.'
          example: 1Min
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getCryptoMultiBars
  '/v1beta1/crypto/{symbol}/quotes/latest':
    get:
      tags:
        - Crypto Pricing Data API
      summary: Latest Quote
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: exchange
          in: query
          schema:
            type: string
          description: 'One of the following exchanges: ERSX, GNSS or CBSE'
          example: ERSX
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          example: BTCUSD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getCryptoLatestQuote
      description: Returns latest quote for the queried crypto symbol
  '/v1beta1/crypto/{symbol}/xbbo/latest':
    get:
      tags:
        - Crypto Pricing Data API
      summary: Latest XBBO
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: symbol
          in: path
          schema:
            type: string
          required: true
          example: BTCUSD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
      operationId: getLatestXBBOCrypto
      description: Returns the XBBO for a crypto symbol that calculates the Best Bid and Offer across multiple exchanges. If exchanges is not specified then only the exchanges that can be traded on Alpaca are included in the calculation.
  /v1beta1/news:
    get:
      tags:
        - default
      summary: News API
      parameters:
        - name: Apca-Api-Key-Id
          in: header
          schema:
            type: string
          example: '{{APCA_API_KEY_ID}}'
        - name: Apca-Api-Secret-Key
          in: header
          schema:
            type: string
          example: '{{APCA_API_SECRET_KEY}}'
        - name: start
          in: query
          schema:
            type: string
          description: (RFC 3339) Start date to start retrieving news articles
          example: '2021-01-01T00:00:00Z'
        - name: end
          in: query
          schema:
            type: string
          description: (RFC 3339) End date of period to retrieve news articles
          example: '2021-12-31T11:59:59Z'
        - name: symbols
          in: query
          schema:
            type: string
          description: List of symbols to retrive news
          example: 'AAPL,TSLA,BTCUSD'
        - name: limit
          in: query
          schema:
            type: integer
          description: Limit of news items to be returned for given page
        - name: sort
          in: query
          schema:
            type: string
            enum:
              - DESC
              - ASC
          description: 'Sort articles by updated date. Options: DESC, ASC'
          example: DESC
        - name: include_content
          in: query
          schema:
            type: boolean
          description: Boolean indicator to include content for news aritcles (if available)
        - name: exclude_contentless
          in: query
          schema:
            type: boolean
          description: 'Boolean indicator to exclude news articles that do not contain content '
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                news-response-example:
                  value:
                    news:
                      - id: 24843171
                        headline: 'Apple Leader in Phone Sales in China for Second Straight Month in November With 23.6% Share, According to Market Research Data'
                        author: Charles Gross
                        created_at: '2021-12-31T11:08:42Z'
                        updated_at: '2021-12-31T11:08:43Z'
                        summary: ''
                        url: 'https://www.benzinga.com/news/21/12/24843171/apple-leader-in-phone-sales-in-china-for-second-straight-month-in-november-with-23-6-share-according'
                        images: []
                        symbols:
                          - AAPL
                        source: benzinga
                    next_page_token: MTY0MDk0ODkyMzAwMDAwMDAwMHwyNDg0MzE3MQ==
              schema:
                type: object
                properties:
                  news:
                    type: array
                    items:
                      $ref: '#/components/schemas/News'
                  next_page_token:
                    type: string
                    description: Pagination token for next page
      operationId: getNews
      description: Returns latest news articles across stocks and crypto. By default returns latest 10 news articles.
components:
  securitySchemes:
    API_Key:
      name: APCA-API-KEY-ID
      type: apiKey
      in: header
    API_Secret:
      name: APCA-API-SECRET-KEY
      type: apiKey
      in: header
  schemas:
    User:
      title: User
      type: object
      description: ''
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-examples:
        example-1:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
    Trades:
      title: Trades
      type: object
      properties:
        t:
          type: string
          description: Timestamp in RFC-3339 format with nanosecond precision
        x:
          type: string
          description: Exchange where the trade happened.
        p:
          type: number
          description: Trade price.
        s:
          type: integer
          description: Trade Size.
        c:
          type: array
          description: Trade conditions
          items:
            type: string
        i:
          type: integer
          description: Trade ID
        z:
          type: string
          description: Tape
    Snapshot:
      title: Snapshot
      type: object
      properties:
        latestTrade:
          type: object
          description: latest trade object
        latestQuote:
          type: object
          description: latest quote object
        minuteBar:
          type: object
          description: minute bar object
        dailyBar:
          type: object
          description: |
            daily bar object
        prevDailyBar:
          type: object
          description: previous daily close bar object
      description: |
        The Snapshot API for one ticker provides the latest trade, latest quote, minute bar daily bar and previous daily bar data for a given ticker symbol.
    Quotes:
      title: Quotes
      type: object
      properties:
        t:
          type: string
          description: Timestamp in RFC-3339 fromat with nanosecond precision
        ax:
          type: string
          description: ask exchange
        ap:
          type: number
          description: |
            ask price
        as:
          type: integer
          description: |
            ask size
        bx:
          type: string
          description: bid exchange
        bp:
          type: number
          description: |
            bid price
        bs:
          type: integer
          description: bid size
        c:
          type: array
          description: quote conditions
          items:
            type: string
      description: |
        The Quotes API provides NBBO quotes for a given ticker symbol at a specified date.
    Bars:
      title: Bars
      type: object
      properties:
        t:
          type: string
          description: Timestamp in RFC-3339 format with nanosecond precision.
        o:
          type: number
          description: Open price
        h:
          type: number
          description: High price.
        l:
          type: number
          description: |
            Low price.
        c:
          type: number
          description: Close price.
        v:
          type: integer
          description: Volume.
        'n':
          type: integer
          description: Number of trades.
        vw:
          type: integer
          description: Volume weighted average price.
      description: |
        The bars API returns aggregate historical data for the requested securities.
    News:
      description: Model representing a news article from the Alpaca Market Data API
      type: object
      x-examples:
        example-1:
          id: 24803233
          headline: Benzinga's Top 5 Articles For 2021 â€” Or 'Who Let The Dog Out?'
          author: Sue Strachan
          created_at: '2021-12-29T15:11:03Z'
          updated_at: '2021-12-30T20:37:41Z'
          summary: '2021 may have been the Year of the Ox in the Chinese calendar, but for Benzinga, it was the Year of the Dog, or should we say, Year of the Dogecoin (CRYPTO: DOGE).'
          content: "<p>2021 may have been the Year of the Ox in the Chinese calendar, but for Benzinga, it was the Year of the Dog, or should we say, Year of the <strong>Dogecoin</strong> (CRYPTO: <a class=\"ticker\" href=\"https://www.benzinga.com/quote/doge/usd\">DOGE</a>).</p>\r\n\r\n<p>The memecoin created in 2013...."
          url: 'https://www.benzinga.com/news/21/12/24843171/apple-leader-in-phone-sales-in-china-for-second-straight-month-in-november-with-23-6-share-according'
          images:
            - size: large
              url: 'https://cdn.benzinga.com/files/imagecache/2048x1536xUP/images/story/2012/doge_12.jpg'
            - size: small
              url: 'https://cdn.benzinga.com/files/imagecache/1024x768xUP/images/story/2012/doge_12.jpg'
            - size: thumb
              url: 'https://cdn.benzinga.com/files/imagecache/250x187xUP/images/story/2012/doge_12.jpg'
          symbols:
            - AMZN
            - BTCUSD
            - COIN
            - DOGEUSD
            - SPCE
            - TSLA
            - TWTR
          source: benzinga
      properties:
        id:
          type: number
          description: News article ID
        headline:
          type: string
          minLength: 1
          description: Headline or title of the article
        author:
          type: string
          minLength: 1
          description: Original author of news article
        created_at:
          type: string
          format: date-time
          description: Date article was created
        updated_at:
          type: string
          format: date-time
          description: Date article was updated
        summary:
          type: string
          minLength: 1
          description: Summary text for the article (may be first sentence of content)
        content:
          type: string
          minLength: 1
          description: Content of the news article (might contain HTML)
        url:
          type: string
          format: uri
          description: URL of article (if applicable)
          nullable: true
        images:
          type: array
          uniqueItems: true
          description: List of images (URLs) related to given article (may be empty)
          items:
            $ref: '#/components/schemas/NewsImage'
        symbols:
          type: array
          description: List of related or mentioned symbols
          items:
            type: string
        source:
          type: string
          minLength: 1
          description: Source where the news originated from (e.g. Benzinga)
      required:
        - id
        - headline
        - author
        - created_at
        - updated_at
        - summary
        - content
        - images
        - symbols
        - source
    NewsImage:
      description: A model representing images for news article. simply a url to the image along with a size parameter suggesting the display size of the image
      type: object
      x-examples:
        example-1:
          size: thumb
          url: 'https://cdn.benzinga.com/files/imagecache/250x187xUP/images/story/2012/doge_12.jpg'
      properties:
        size:
          type: string
          minLength: 1
          description: 'Possible values for size are thumb, small and large.'
          example: thumb
        url:
          type: string
          minLength: 1
          description: url to image from news article
      required:
        - size
        - url
      title: ''
